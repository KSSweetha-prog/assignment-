import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Scanner;

import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

class Main {
public static void main(String[] args) {


   String BASE_URL = "https://samples.openweathermap.org/data/2.5/forecast/hourly?q=London,us&appid=b6907d289e10d714a6e88b30761fae22"; 

    DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd");

        Scanner scanner = new Scanner(System.in);

        int choice;
        do {
            printMenu();
            choice = scanner.nextInt();
            scanner.nextLine(); 

            switch (choice) {
                case 1:
                    getWeather();
                    break;
                case 2:
                    getWindSpeed();
                    break;
                case 3:
                    getPressure();
                    break;
                case 0:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        } while (choice != 0);

        scanner.close();
    }

    private static void printMenu() {
        System.out.println("1. Get weather");
        System.out.println("2. Get Wind Speed");
        System.out.println("3. Get Pressure");
        System.out.println("0. Exit");
        System.out.print("Enter your choice: ");
    }

    private static void getWeather() {
        String dateStr = getDateFromUser("Enter the date (YYYY-MM-DD): ");
        LocalDate date = LocalDate.parse(dateStr, DATE_FORMATTER);

        
        String weatherURL = BASE_URL + "?date=" + date;

        try {
            String response = makeAPIRequest(weatherURL);
            JsonObject weatherData = JsonParser.parseString(response).getAsJsonObject();

            System.out.println("Weather data for " + date + ": " + weatherData);
        } catch (IOException e) {
            System.out.println("Error fetching weather data: " + e.getMessage());
        }
    }

    private static void getWindSpeed() {
        String dateStr = getDateFromUser("Enter the date (YYYY-MM-DD): ");
        LocalDate date = LocalDate.parse(dateStr, DATE_FORMATTER);

        String windSpeedURL = BASE_URL + "?date=" + date;

        try {
            String response = makeAPIRequest(windSpeedURL);
            System.out.println("Wind Speed on " + date + ": " + response + " m/s");
        } catch (IOException e) {
            System.out.println("Error fetching wind speed data: " + e.getMessage());
        }
    }

    private static void getPressure() {
        String dateStr = getDateFromUser("Enter the date (YYYY-MM-DD): ");
        LocalDate date = LocalDate.parse(dateStr, DATE_FORMATTER);

        
        String pressureURL = BASE_URL + "?date=" + date;

        try {
            String response = makeAPIRequest(pressureURL);
            System.out.println("Pressure on " + date + ": " + response + " hPa");
        } catch (IOException e) {
            System.out.println("Error fetching pressure data: " + e.getMessage());
        }
    }

    private static String getDateFromUser(String message) {
        Scanner scanner = new Scanner(System.in);
        System.out.print(message);
        return scanner.nextLine();
    }

    private static String makeAPIRequest(String url) throws IOException {
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        con.setRequestMethod("GET");

        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
        StringBuilder response = new StringBuilder();
        String inputLine;
        while ((inputLine = in.readLine()) != null) {
            response.append(inputLine);
        }
        in.close();

        return response.toString();
    }
}
